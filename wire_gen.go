// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"library/config"
	"library/controller"
	"library/router"
	"library/service"
)

// Injectors from wire.go:

func InitApp(configPath string) (*router.App, error) {
	client := config.NewRedisClient()
	seatServiceImpl := service.NewSeatServiceImpl(client)
	seatController := controller.NewSeatController(seatServiceImpl, client)
	seatRouter := router.NewSeatRouter(seatController)
	creditServiceImpl := service.NewCreditServiceImpl()
	creditController := controller.NewCreditController(creditServiceImpl)
	creditRouter := router.NewCreditRouter(creditController)
	discussionImpl := service.NewDiscussionServiceImpl(client)
	discussionController := controller.NewDiscussionController(discussionImpl, client)
	discussionRouter := router.NewDiscussionRouter(discussionController)
	recordsServiceImpl := service.NewHistoryRecordsServiceImpl()
	historyRecordController := controller.NewHistoryRecordController(recordsServiceImpl)
	historyRecordRouter := router.NewHistoryRecordRouter(historyRecordController)
	app := router.NewApp(seatRouter, creditRouter, discussionRouter, historyRecordRouter)
	return app, nil
}
